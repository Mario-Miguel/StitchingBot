\hypertarget{motor__controller_8ino}{}\doxysection{motor\+\_\+controller.\+ino File Reference}
\label{motor__controller_8ino}\index{motor\_controller.ino@{motor\_controller.ino}}
{\ttfamily \#include $<$Accel\+Stepper.\+h$>$}\newline
{\ttfamily \#include $<$Software\+Serial.\+h$>$}\newline
{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$string.\+h$>$}\newline
Include dependency graph for motor\+\_\+controller.\+ino\+:
% FIG 0
\doxysubsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}~1
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}~50
\end{DoxyCompactItemize}
\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a9a4e24304746e87b91db15dfd1081645}{D\+I\+RX}}~2
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_aefce719403b8e70b97befc54aa7947d2}{S\+T\+E\+PX}}~3
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a206df11c65d6fa30bf01ac9108cd59f9}{D\+I\+R\+Y\+\_\+1}}~4
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_afe3a1bfa8bbe56484a0cd53fbb9a6c4a}{S\+T\+E\+P\+Y\+\_\+1}}~5
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a6b5ec6d626ee21af871e509f2b02033b}{D\+I\+R\+Y\+\_\+2}}~8
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_add07a1e34bf1df68d8e94d012c41ec03}{S\+T\+E\+P\+Y\+\_\+2}}~9
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a851c0ed63c95c38825749bb757f8c2f8}{D\+I\+R\+\_\+\+P\+U\+L\+L\+EY}}~12
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a85ceec4f649f90d72ef6ba50f17b41dd}{S\+T\+E\+P\+\_\+\+P\+U\+L\+L\+EY}}~11
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a271a298433c0f739d71a1e005e25d092}{F\+I\+N\+\_\+\+C\+A\+R\+RX}}~25
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a777265ec34583b226388dca466c2a2cf}{F\+I\+N\+\_\+\+C\+A\+R\+RY}}~23
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_af56d119b136d6f0e2608af54c394edea}{rx}}~19
\item 
\#define \mbox{\hyperlink{motor__controller_8ino_a71fddcd22d23e1d7755f279139eafbd8}{tx}}~18
\end{DoxyCompactItemize}

\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
Software\+Serial \mbox{\hyperlink{motor__controller_8ino_adc84151cd64fdb95e7c4b9fc86343288}{B\+T\+Serial}} (\mbox{\hyperlink{motor__controller_8ino_af56d119b136d6f0e2608af54c394edea}{rx}}, \mbox{\hyperlink{motor__controller_8ino_a71fddcd22d23e1d7755f279139eafbd8}{tx}})
\item 
void \mbox{\hyperlink{motor__controller_8ino_a4fc01d736fe50cf5b977f755b675f11d}{setup}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_afe461d27b9c48d5921c00d521181f12f}{loop}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_acf1d5d7c464b801aa2ad301ea1aa9b3e}{start\+Autohome}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_a9a787c7e3618d624fc3fd76b4532d651}{create\+Actions}} (String actions\+String)
\item 
String \mbox{\hyperlink{motor__controller_8ino_a7116c38a2e92a04669079af82c9e2298}{get\+Value}} (String datos, char separator, int index)
\item 
void \mbox{\hyperlink{motor__controller_8ino_a79c8d8bcf6f0b742b76bffb52a6c7ff9}{execute\+Actions}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_a59a28fb6569e94c0f17490619ed6500f}{reset\+Arrays}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_a7561149ebe1cd06d51c12446713fb10a}{move\+Motors\+Lib}} (int x\+Coord, int y\+Coord)
\item 
bool \mbox{\hyperlink{motor__controller_8ino_ad0e750de8295111be75825865840dcf4}{end\+Of\+PathY}} ()
\item 
bool \mbox{\hyperlink{motor__controller_8ino_a4217a6589a17bbbce72fa073e68b6d79}{end\+Of\+PathX}} ()
\item 
void \mbox{\hyperlink{motor__controller_8ino_ac39ebd7f60a00e007dfc936864999fa3}{configure\+Pulley\+Motor}} (int steps)
\item 
void \mbox{\hyperlink{motor__controller_8ino_a37bb15c18b2f84836cc518674ffe2902}{run\+Pulley\+Motor}} ()
\end{DoxyCompactItemize}
\doxysubsection*{Variables}
\begin{DoxyCompactItemize}
\item 
int \mbox{\hyperlink{motor__controller_8ino_a4ba08c48ae4d9a067cb5079cbe2a77c3}{stepper\+Pulley\+Steps}} = 467
\item 
String \mbox{\hyperlink{motor__controller_8ino_a48cd73bf649bff9e9d657c1da753e7ff}{received\+String}} = \char`\"{}\char`\"{}
\end{DoxyCompactItemize}
\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
Accel\+Stepper \mbox{\hyperlink{motor__controller_8ino_afda0b4a3b38d93ab5ef5786a339f24aa}{stepperX}} = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_aefce719403b8e70b97befc54aa7947d2}{S\+T\+E\+PX}}, \mbox{\hyperlink{motor__controller_8ino_a9a4e24304746e87b91db15dfd1081645}{D\+I\+RX}})
\item 
Accel\+Stepper \mbox{\hyperlink{motor__controller_8ino_a5a8607c5df4dad84608c099f968af540}{stepper\+Y1}} = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_afe3a1bfa8bbe56484a0cd53fbb9a6c4a}{S\+T\+E\+P\+Y\+\_\+1}}, \mbox{\hyperlink{motor__controller_8ino_a206df11c65d6fa30bf01ac9108cd59f9}{D\+I\+R\+Y\+\_\+1}})
\item 
Accel\+Stepper \mbox{\hyperlink{motor__controller_8ino_a51bc6045dabd993227326ac0e26e12bb}{stepper\+Y2}} = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_add07a1e34bf1df68d8e94d012c41ec03}{S\+T\+E\+P\+Y\+\_\+2}}, \mbox{\hyperlink{motor__controller_8ino_a6b5ec6d626ee21af871e509f2b02033b}{D\+I\+R\+Y\+\_\+2}})
\item 
Accel\+Stepper \mbox{\hyperlink{motor__controller_8ino_ae4b66bac0b571cc1378e0c5e500f59b2}{stepper\+Pulley}} = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_a85ceec4f649f90d72ef6ba50f17b41dd}{S\+T\+E\+P\+\_\+\+P\+U\+L\+L\+EY}}, \mbox{\hyperlink{motor__controller_8ino_a851c0ed63c95c38825749bb757f8c2f8}{D\+I\+R\+\_\+\+P\+U\+L\+L\+EY}})
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
const String \mbox{\hyperlink{motor__controller_8ino_aab13e03ab306d6356ab910335b24dd02}{A\+S\+K\+\_\+\+F\+O\+R\+\_\+\+A\+C\+T\+I\+O\+NS}} = \char`\"{}M\char`\"{}
\item 
const String \mbox{\hyperlink{motor__controller_8ino_a93a2531f6a1ae44ae488c14bc8710305}{S\+T\+A\+R\+T\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON}} = \char`\"{}B\char`\"{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_a844675602f7731ac4406eb5c7e708423}{C\+O\+N\+F\+I\+G\+U\+R\+E\+\_\+\+P\+U\+L\+L\+EY}} = \textquotesingle{}C\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_a825c8859d291595b79dd4494bf9dfaa9}{P\+A\+U\+S\+E\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON}} = \textquotesingle{}P\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_a634654240a4c19b11191d363796e5f4e}{R\+E\+S\+U\+M\+E\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON}} = \textquotesingle{}R\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_ad922515b5f46489ba25cb2bbae59998c}{S\+T\+O\+P\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON}} = \textquotesingle{}T\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_aa3c2c2fa8863c8adce407fcd1a943a5e}{UP}} = \textquotesingle{}W\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_aab4d23e0fde2ac0d28526d7179dcc923}{D\+O\+WN}} = \textquotesingle{}S\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_abc01f016a57a09f4a044ebb7f0341e94}{L\+E\+FT}} = \textquotesingle{}A\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_a0804c1093f410077b3da5dc7dfefa56d}{R\+I\+G\+HT}} = \textquotesingle{}D\textquotesingle{}
\item 
const char \mbox{\hyperlink{motor__controller_8ino_a82bedca8c625ae2765b4742838325c78}{S\+T\+A\+R\+T\+\_\+\+A\+U\+T\+O\+H\+O\+ME}} = \textquotesingle{}H\textquotesingle{}
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
String \mbox{\hyperlink{motor__controller_8ino_a55c0b4bb0f91055a4b37bad230861d34}{actions\+Read}} \mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}
\item 
int \mbox{\hyperlink{motor__controller_8ino_a06d8704fb8ceefb09750bcb174fccfed}{time\+Actions\+Read}} \mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}
\item 
int \mbox{\hyperlink{motor__controller_8ino_a3420e3c5e9ee0a06096b489d36d49567}{x\+Coords}} \mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}
\item 
int \mbox{\hyperlink{motor__controller_8ino_a4651592b69b46a96e13f75a332415865}{y\+Coords}} \mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}
\end{DoxyCompactItemize}

\textbf{ }\par
\begin{DoxyCompactItemize}
\item 
int \mbox{\hyperlink{motor__controller_8ino_a076be89be1bb01964edcefb1511393d2}{action\+Counter}} = 0
\item 
unsigned long \mbox{\hyperlink{motor__controller_8ino_a2693b7579b7c29004f7be2c4d708a974}{start\+Action\+Time}} = 0
\item 
boolean \mbox{\hyperlink{motor__controller_8ino_afb619e12556b14bc38876386f3cc84c3}{entrada\+Leida}} = false
\item 
boolean \mbox{\hyperlink{motor__controller_8ino_add98253dfac813abdcdd80e6f4bd7adb}{are\+Actions\+Remaining}} = false
\item 
boolean \mbox{\hyperlink{motor__controller_8ino_abcf3c4b7c482220adb294f19913ef4c8}{is\+Paused}} = false
\end{DoxyCompactItemize}



\doxysubsection{Macro Definition Documentation}
\mbox{\Hypertarget{motor__controller_8ino_a851c0ed63c95c38825749bb757f8c2f8}\label{motor__controller_8ino_a851c0ed63c95c38825749bb757f8c2f8}} 
\index{motor\_controller.ino@{motor\_controller.ino}!DIR\_PULLEY@{DIR\_PULLEY}}
\index{DIR\_PULLEY@{DIR\_PULLEY}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{DIR\_PULLEY}{DIR\_PULLEY}}
{\footnotesize\ttfamily \#define D\+I\+R\+\_\+\+P\+U\+L\+L\+EY~12}

Pin necesario para el funcionamiento del motor de la polea \mbox{\Hypertarget{motor__controller_8ino_a9a4e24304746e87b91db15dfd1081645}\label{motor__controller_8ino_a9a4e24304746e87b91db15dfd1081645}} 
\index{motor\_controller.ino@{motor\_controller.ino}!DIRX@{DIRX}}
\index{DIRX@{DIRX}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{DIRX}{DIRX}}
{\footnotesize\ttfamily \#define D\+I\+RX~2}

Pin necesario para el funcionamiento del motor del eje X \mbox{\Hypertarget{motor__controller_8ino_a206df11c65d6fa30bf01ac9108cd59f9}\label{motor__controller_8ino_a206df11c65d6fa30bf01ac9108cd59f9}} 
\index{motor\_controller.ino@{motor\_controller.ino}!DIRY\_1@{DIRY\_1}}
\index{DIRY\_1@{DIRY\_1}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{DIRY\_1}{DIRY\_1}}
{\footnotesize\ttfamily \#define D\+I\+R\+Y\+\_\+1~4}

Pin necesario para el funcionamiento de los motores del eje Y \mbox{\Hypertarget{motor__controller_8ino_a6b5ec6d626ee21af871e509f2b02033b}\label{motor__controller_8ino_a6b5ec6d626ee21af871e509f2b02033b}} 
\index{motor\_controller.ino@{motor\_controller.ino}!DIRY\_2@{DIRY\_2}}
\index{DIRY\_2@{DIRY\_2}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{DIRY\_2}{DIRY\_2}}
{\footnotesize\ttfamily \#define D\+I\+R\+Y\+\_\+2~8}

Pin necesario para el funcionamiento de los motores del eje Y \mbox{\Hypertarget{motor__controller_8ino_a271a298433c0f739d71a1e005e25d092}\label{motor__controller_8ino_a271a298433c0f739d71a1e005e25d092}} 
\index{motor\_controller.ino@{motor\_controller.ino}!FIN\_CARRX@{FIN\_CARRX}}
\index{FIN\_CARRX@{FIN\_CARRX}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{FIN\_CARRX}{FIN\_CARRX}}
{\footnotesize\ttfamily \#define F\+I\+N\+\_\+\+C\+A\+R\+RX~25}

Pin del final de carrera \mbox{\Hypertarget{motor__controller_8ino_a777265ec34583b226388dca466c2a2cf}\label{motor__controller_8ino_a777265ec34583b226388dca466c2a2cf}} 
\index{motor\_controller.ino@{motor\_controller.ino}!FIN\_CARRY@{FIN\_CARRY}}
\index{FIN\_CARRY@{FIN\_CARRY}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{FIN\_CARRY}{FIN\_CARRY}}
{\footnotesize\ttfamily \#define F\+I\+N\+\_\+\+C\+A\+R\+RY~23}

Pin del final de carrera \mbox{\Hypertarget{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}\label{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}} 
\index{motor\_controller.ino@{motor\_controller.ino}!MAX\_ARRAY\_SIZE@{MAX\_ARRAY\_SIZE}}
\index{MAX\_ARRAY\_SIZE@{MAX\_ARRAY\_SIZE}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{MAX\_ARRAY\_SIZE}{MAX\_ARRAY\_SIZE}}
{\footnotesize\ttfamily \#define M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE~50}

Tamaño máximo de los vectores de coordenadas. \mbox{\Hypertarget{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}\label{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}} 
\index{motor\_controller.ino@{motor\_controller.ino}!motorInterfaceType@{motorInterfaceType}}
\index{motorInterfaceType@{motorInterfaceType}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{motorInterfaceType}{motorInterfaceType}}
{\footnotesize\ttfamily \#define motor\+Interface\+Type~1}

Define la interfaz del motor. Es necesario para la librería Accel\+Stepper \mbox{\Hypertarget{motor__controller_8ino_af56d119b136d6f0e2608af54c394edea}\label{motor__controller_8ino_af56d119b136d6f0e2608af54c394edea}} 
\index{motor\_controller.ino@{motor\_controller.ino}!rx@{rx}}
\index{rx@{rx}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{rx}{rx}}
{\footnotesize\ttfamily \#define rx~19}

Pin necesario para el funcionamiento del módulo bluetooth \mbox{\Hypertarget{motor__controller_8ino_a85ceec4f649f90d72ef6ba50f17b41dd}\label{motor__controller_8ino_a85ceec4f649f90d72ef6ba50f17b41dd}} 
\index{motor\_controller.ino@{motor\_controller.ino}!STEP\_PULLEY@{STEP\_PULLEY}}
\index{STEP\_PULLEY@{STEP\_PULLEY}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{STEP\_PULLEY}{STEP\_PULLEY}}
{\footnotesize\ttfamily \#define S\+T\+E\+P\+\_\+\+P\+U\+L\+L\+EY~11}

Pin necesario para el funcionamiento del motor de la polea \mbox{\Hypertarget{motor__controller_8ino_aefce719403b8e70b97befc54aa7947d2}\label{motor__controller_8ino_aefce719403b8e70b97befc54aa7947d2}} 
\index{motor\_controller.ino@{motor\_controller.ino}!STEPX@{STEPX}}
\index{STEPX@{STEPX}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{STEPX}{STEPX}}
{\footnotesize\ttfamily \#define S\+T\+E\+PX~3}

Pin necesario para el funcionamiento del motor del eje X \mbox{\Hypertarget{motor__controller_8ino_afe3a1bfa8bbe56484a0cd53fbb9a6c4a}\label{motor__controller_8ino_afe3a1bfa8bbe56484a0cd53fbb9a6c4a}} 
\index{motor\_controller.ino@{motor\_controller.ino}!STEPY\_1@{STEPY\_1}}
\index{STEPY\_1@{STEPY\_1}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{STEPY\_1}{STEPY\_1}}
{\footnotesize\ttfamily \#define S\+T\+E\+P\+Y\+\_\+1~5}

Pin necesario para el funcionamiento de los motores del eje Y \mbox{\Hypertarget{motor__controller_8ino_add07a1e34bf1df68d8e94d012c41ec03}\label{motor__controller_8ino_add07a1e34bf1df68d8e94d012c41ec03}} 
\index{motor\_controller.ino@{motor\_controller.ino}!STEPY\_2@{STEPY\_2}}
\index{STEPY\_2@{STEPY\_2}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{STEPY\_2}{STEPY\_2}}
{\footnotesize\ttfamily \#define S\+T\+E\+P\+Y\+\_\+2~9}

Pin necesario para el funcionamiento de los motores del eje Y \mbox{\Hypertarget{motor__controller_8ino_a71fddcd22d23e1d7755f279139eafbd8}\label{motor__controller_8ino_a71fddcd22d23e1d7755f279139eafbd8}} 
\index{motor\_controller.ino@{motor\_controller.ino}!tx@{tx}}
\index{tx@{tx}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{tx}{tx}}
{\footnotesize\ttfamily \#define tx~18}

Pin necesario para el funcionamiento del módulo bluetooth 

\doxysubsection{Function Documentation}
\mbox{\Hypertarget{motor__controller_8ino_adc84151cd64fdb95e7c4b9fc86343288}\label{motor__controller_8ino_adc84151cd64fdb95e7c4b9fc86343288}} 
\index{motor\_controller.ino@{motor\_controller.ino}!BTSerial@{BTSerial}}
\index{BTSerial@{BTSerial}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{BTSerial()}{BTSerial()}}
{\footnotesize\ttfamily Software\+Serial B\+T\+Serial (\begin{DoxyParamCaption}\item[{\mbox{\hyperlink{motor__controller_8ino_af56d119b136d6f0e2608af54c394edea}{rx}}}]{,  }\item[{\mbox{\hyperlink{motor__controller_8ino_a71fddcd22d23e1d7755f279139eafbd8}{tx}}}]{ }\end{DoxyParamCaption})}

Fija los pines utilizados para la comunicación bluetooth \mbox{\Hypertarget{motor__controller_8ino_ac39ebd7f60a00e007dfc936864999fa3}\label{motor__controller_8ino_ac39ebd7f60a00e007dfc936864999fa3}} 
\index{motor\_controller.ino@{motor\_controller.ino}!configurePulleyMotor@{configurePulleyMotor}}
\index{configurePulleyMotor@{configurePulleyMotor}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{configurePulleyMotor()}{configurePulleyMotor()}}
{\footnotesize\ttfamily void configure\+Pulley\+Motor (\begin{DoxyParamCaption}\item[{int}]{steps }\end{DoxyParamCaption})}

Configura los pasos del motor de la polea y lo mueve para probarlo


\begin{DoxyParams}{Parameters}
{\em steps} & Pasos con los que se desea configurar el motor de la polea. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{motor__controller_8ino_a9a787c7e3618d624fc3fd76b4532d651}\label{motor__controller_8ino_a9a787c7e3618d624fc3fd76b4532d651}} 
\index{motor\_controller.ino@{motor\_controller.ino}!createActions@{createActions}}
\index{createActions@{createActions}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{createActions()}{createActions()}}
{\footnotesize\ttfamily void create\+Actions (\begin{DoxyParamCaption}\item[{String}]{actions\+String }\end{DoxyParamCaption})}

Convierte una cadena de acciones en dos vectores de enteros, uno para las coordenadas X y otro para las coordenadas Y.


\begin{DoxyParams}{Parameters}
{\em actions\+String} & cadena conteniendo todas las acciones. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{motor__controller_8ino_a4217a6589a17bbbce72fa073e68b6d79}\label{motor__controller_8ino_a4217a6589a17bbbce72fa073e68b6d79}} 
\index{motor\_controller.ino@{motor\_controller.ino}!endOfPathX@{endOfPathX}}
\index{endOfPathX@{endOfPathX}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{endOfPathX()}{endOfPathX()}}
{\footnotesize\ttfamily bool end\+Of\+PathX (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Indica si se ha llegado al final de carrera del eje X del robot

\begin{DoxyReturn}{Returns}
true si ha llegado al final de carrera, false en caso contrario. 
\end{DoxyReturn}
\mbox{\Hypertarget{motor__controller_8ino_ad0e750de8295111be75825865840dcf4}\label{motor__controller_8ino_ad0e750de8295111be75825865840dcf4}} 
\index{motor\_controller.ino@{motor\_controller.ino}!endOfPathY@{endOfPathY}}
\index{endOfPathY@{endOfPathY}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{endOfPathY()}{endOfPathY()}}
{\footnotesize\ttfamily bool end\+Of\+PathY (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Indica si se ha llegado al final de carrera del eje Y del robot

\begin{DoxyReturn}{Returns}
true si ha llegado al final de carrera, false en caso contrario. 
\end{DoxyReturn}
\mbox{\Hypertarget{motor__controller_8ino_a79c8d8bcf6f0b742b76bffb52a6c7ff9}\label{motor__controller_8ino_a79c8d8bcf6f0b742b76bffb52a6c7ff9}} 
\index{motor\_controller.ino@{motor\_controller.ino}!executeActions@{executeActions}}
\index{executeActions@{executeActions}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{executeActions()}{executeActions()}}
{\footnotesize\ttfamily void execute\+Actions (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Mueve los motores a las coordenadas que se le han enviado. En caso de no tener más acciones, envía un mensaje vía bluetooth pidiendo más. \mbox{\Hypertarget{motor__controller_8ino_a7116c38a2e92a04669079af82c9e2298}\label{motor__controller_8ino_a7116c38a2e92a04669079af82c9e2298}} 
\index{motor\_controller.ino@{motor\_controller.ino}!getValue@{getValue}}
\index{getValue@{getValue}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{getValue()}{getValue()}}
{\footnotesize\ttfamily String get\+Value (\begin{DoxyParamCaption}\item[{String}]{datos,  }\item[{char}]{separator,  }\item[{int}]{index }\end{DoxyParamCaption})}

Parte una cadena en función del separador y devuelve el elemento que se indica en el index


\begin{DoxyParams}{Parameters}
{\em datos} & Cadena que se desea dividir \\
\hline
{\em separator} & Separador por el que se va a dividir la cadena \\
\hline
{\em index} & posición del elemento que se desea obtener \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Trozo de la cadena pasada por parámetro. 
\end{DoxyReturn}
\mbox{\Hypertarget{motor__controller_8ino_afe461d27b9c48d5921c00d521181f12f}\label{motor__controller_8ino_afe461d27b9c48d5921c00d521181f12f}} 
\index{motor\_controller.ino@{motor\_controller.ino}!loop@{loop}}
\index{loop@{loop}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{loop()}{loop()}}
{\footnotesize\ttfamily void loop (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Función estándar de arduino que se ejecuta en bucle hasta que el Arduino se desconecta.

Intenta leer una entrada en el Serial\+Monitor destinado para la comunicación bluetooth. En caso de que reciba una entrada, comprueba qué señal es y ejecuta un comando u otro. En caso de no tener ninguna entrada, intenta ejecutar las acciones que se le ha enviado previamente. \mbox{\Hypertarget{motor__controller_8ino_a7561149ebe1cd06d51c12446713fb10a}\label{motor__controller_8ino_a7561149ebe1cd06d51c12446713fb10a}} 
\index{motor\_controller.ino@{motor\_controller.ino}!moveMotorsLib@{moveMotorsLib}}
\index{moveMotorsLib@{moveMotorsLib}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{moveMotorsLib()}{moveMotorsLib()}}
{\footnotesize\ttfamily void move\+Motors\+Lib (\begin{DoxyParamCaption}\item[{int}]{x\+Coord,  }\item[{int}]{y\+Coord }\end{DoxyParamCaption})}

Mueve los motores a unas coordenadas específicas que se les pasa por parámetro


\begin{DoxyParams}{Parameters}
{\em x\+Coord,y\+Coord} & Coordenadas X e Y a las que se desea mover el motor. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{motor__controller_8ino_a59a28fb6569e94c0f17490619ed6500f}\label{motor__controller_8ino_a59a28fb6569e94c0f17490619ed6500f}} 
\index{motor\_controller.ino@{motor\_controller.ino}!resetArrays@{resetArrays}}
\index{resetArrays@{resetArrays}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{resetArrays()}{resetArrays()}}
{\footnotesize\ttfamily void reset\+Arrays (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Pone los valores de los vectores donde se almacenan las coordenadas a 0. \mbox{\Hypertarget{motor__controller_8ino_a37bb15c18b2f84836cc518674ffe2902}\label{motor__controller_8ino_a37bb15c18b2f84836cc518674ffe2902}} 
\index{motor\_controller.ino@{motor\_controller.ino}!runPulleyMotor@{runPulleyMotor}}
\index{runPulleyMotor@{runPulleyMotor}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{runPulleyMotor()}{runPulleyMotor()}}
{\footnotesize\ttfamily void run\+Pulley\+Motor (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Mueve el motor de la polea una serie de pasos determinados, determinados por stepper\+Pulley\+Steps \mbox{\Hypertarget{motor__controller_8ino_a4fc01d736fe50cf5b977f755b675f11d}\label{motor__controller_8ino_a4fc01d736fe50cf5b977f755b675f11d}} 
\index{motor\_controller.ino@{motor\_controller.ino}!setup@{setup}}
\index{setup@{setup}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{setup()}{setup()}}
{\footnotesize\ttfamily void setup (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Función estándar de Arduino que se ejecuta al iniciar el programa. Se utiliza para iniciar variables, entradas y salidas. \mbox{\Hypertarget{motor__controller_8ino_acf1d5d7c464b801aa2ad301ea1aa9b3e}\label{motor__controller_8ino_acf1d5d7c464b801aa2ad301ea1aa9b3e}} 
\index{motor\_controller.ino@{motor\_controller.ino}!startAutohome@{startAutohome}}
\index{startAutohome@{startAutohome}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{startAutohome()}{startAutohome()}}
{\footnotesize\ttfamily void start\+Autohome (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Mueve los motores para colocar el robot en su posición inicial. 

\doxysubsection{Variable Documentation}
\mbox{\Hypertarget{motor__controller_8ino_a076be89be1bb01964edcefb1511393d2}\label{motor__controller_8ino_a076be89be1bb01964edcefb1511393d2}} 
\index{motor\_controller.ino@{motor\_controller.ino}!actionCounter@{actionCounter}}
\index{actionCounter@{actionCounter}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{actionCounter}{actionCounter}}
{\footnotesize\ttfamily int action\+Counter = 0}

Variable necesaria para mover los motores a la posición necesaria \mbox{\Hypertarget{motor__controller_8ino_a55c0b4bb0f91055a4b37bad230861d34}\label{motor__controller_8ino_a55c0b4bb0f91055a4b37bad230861d34}} 
\index{motor\_controller.ino@{motor\_controller.ino}!actionsRead@{actionsRead}}
\index{actionsRead@{actionsRead}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{actionsRead}{actionsRead}}
{\footnotesize\ttfamily String actions\+Read\mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}}

Vector utilizado para almacenar las coordenadas a las que moverse \mbox{\Hypertarget{motor__controller_8ino_add98253dfac813abdcdd80e6f4bd7adb}\label{motor__controller_8ino_add98253dfac813abdcdd80e6f4bd7adb}} 
\index{motor\_controller.ino@{motor\_controller.ino}!areActionsRemaining@{areActionsRemaining}}
\index{areActionsRemaining@{areActionsRemaining}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{areActionsRemaining}{areActionsRemaining}}
{\footnotesize\ttfamily boolean are\+Actions\+Remaining = false}

Variable necesaria para mover los motores a la posición necesaria \mbox{\Hypertarget{motor__controller_8ino_aab13e03ab306d6356ab910335b24dd02}\label{motor__controller_8ino_aab13e03ab306d6356ab910335b24dd02}} 
\index{motor\_controller.ino@{motor\_controller.ino}!ASK\_FOR\_ACTIONS@{ASK\_FOR\_ACTIONS}}
\index{ASK\_FOR\_ACTIONS@{ASK\_FOR\_ACTIONS}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{ASK\_FOR\_ACTIONS}{ASK\_FOR\_ACTIONS}}
{\footnotesize\ttfamily const String A\+S\+K\+\_\+\+F\+O\+R\+\_\+\+A\+C\+T\+I\+O\+NS = \char`\"{}M\char`\"{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a844675602f7731ac4406eb5c7e708423}\label{motor__controller_8ino_a844675602f7731ac4406eb5c7e708423}} 
\index{motor\_controller.ino@{motor\_controller.ino}!CONFIGURE\_PULLEY@{CONFIGURE\_PULLEY}}
\index{CONFIGURE\_PULLEY@{CONFIGURE\_PULLEY}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{CONFIGURE\_PULLEY}{CONFIGURE\_PULLEY}}
{\footnotesize\ttfamily const char C\+O\+N\+F\+I\+G\+U\+R\+E\+\_\+\+P\+U\+L\+L\+EY = \textquotesingle{}C\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_aab4d23e0fde2ac0d28526d7179dcc923}\label{motor__controller_8ino_aab4d23e0fde2ac0d28526d7179dcc923}} 
\index{motor\_controller.ino@{motor\_controller.ino}!DOWN@{DOWN}}
\index{DOWN@{DOWN}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{DOWN}{DOWN}}
{\footnotesize\ttfamily const char D\+O\+WN = \textquotesingle{}S\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_afb619e12556b14bc38876386f3cc84c3}\label{motor__controller_8ino_afb619e12556b14bc38876386f3cc84c3}} 
\index{motor\_controller.ino@{motor\_controller.ino}!entradaLeida@{entradaLeida}}
\index{entradaLeida@{entradaLeida}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{entradaLeida}{entradaLeida}}
{\footnotesize\ttfamily boolean entrada\+Leida = false}

Variable necesaria para mover los motores a la posición necesaria \mbox{\Hypertarget{motor__controller_8ino_abcf3c4b7c482220adb294f19913ef4c8}\label{motor__controller_8ino_abcf3c4b7c482220adb294f19913ef4c8}} 
\index{motor\_controller.ino@{motor\_controller.ino}!isPaused@{isPaused}}
\index{isPaused@{isPaused}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{isPaused}{isPaused}}
{\footnotesize\ttfamily boolean is\+Paused = false}

Variable necesaria para mover los motores a la posición necesaria \mbox{\Hypertarget{motor__controller_8ino_abc01f016a57a09f4a044ebb7f0341e94}\label{motor__controller_8ino_abc01f016a57a09f4a044ebb7f0341e94}} 
\index{motor\_controller.ino@{motor\_controller.ino}!LEFT@{LEFT}}
\index{LEFT@{LEFT}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{LEFT}{LEFT}}
{\footnotesize\ttfamily const char L\+E\+FT = \textquotesingle{}A\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a825c8859d291595b79dd4494bf9dfaa9}\label{motor__controller_8ino_a825c8859d291595b79dd4494bf9dfaa9}} 
\index{motor\_controller.ino@{motor\_controller.ino}!PAUSE\_EXECUTION@{PAUSE\_EXECUTION}}
\index{PAUSE\_EXECUTION@{PAUSE\_EXECUTION}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{PAUSE\_EXECUTION}{PAUSE\_EXECUTION}}
{\footnotesize\ttfamily const char P\+A\+U\+S\+E\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON = \textquotesingle{}P\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a48cd73bf649bff9e9d657c1da753e7ff}\label{motor__controller_8ino_a48cd73bf649bff9e9d657c1da753e7ff}} 
\index{motor\_controller.ino@{motor\_controller.ino}!receivedString@{receivedString}}
\index{receivedString@{receivedString}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{receivedString}{receivedString}}
{\footnotesize\ttfamily String received\+String = \char`\"{}\char`\"{}}

Almacena la cadena recibida por bluetooth \mbox{\Hypertarget{motor__controller_8ino_a634654240a4c19b11191d363796e5f4e}\label{motor__controller_8ino_a634654240a4c19b11191d363796e5f4e}} 
\index{motor\_controller.ino@{motor\_controller.ino}!RESUME\_EXECUTION@{RESUME\_EXECUTION}}
\index{RESUME\_EXECUTION@{RESUME\_EXECUTION}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{RESUME\_EXECUTION}{RESUME\_EXECUTION}}
{\footnotesize\ttfamily const char R\+E\+S\+U\+M\+E\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON = \textquotesingle{}R\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a0804c1093f410077b3da5dc7dfefa56d}\label{motor__controller_8ino_a0804c1093f410077b3da5dc7dfefa56d}} 
\index{motor\_controller.ino@{motor\_controller.ino}!RIGHT@{RIGHT}}
\index{RIGHT@{RIGHT}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{RIGHT}{RIGHT}}
{\footnotesize\ttfamily const char R\+I\+G\+HT = \textquotesingle{}D\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a82bedca8c625ae2765b4742838325c78}\label{motor__controller_8ino_a82bedca8c625ae2765b4742838325c78}} 
\index{motor\_controller.ino@{motor\_controller.ino}!START\_AUTOHOME@{START\_AUTOHOME}}
\index{START\_AUTOHOME@{START\_AUTOHOME}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{START\_AUTOHOME}{START\_AUTOHOME}}
{\footnotesize\ttfamily const char S\+T\+A\+R\+T\+\_\+\+A\+U\+T\+O\+H\+O\+ME = \textquotesingle{}H\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a93a2531f6a1ae44ae488c14bc8710305}\label{motor__controller_8ino_a93a2531f6a1ae44ae488c14bc8710305}} 
\index{motor\_controller.ino@{motor\_controller.ino}!START\_EXECUTION@{START\_EXECUTION}}
\index{START\_EXECUTION@{START\_EXECUTION}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{START\_EXECUTION}{START\_EXECUTION}}
{\footnotesize\ttfamily const String S\+T\+A\+R\+T\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON = \char`\"{}B\char`\"{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a2693b7579b7c29004f7be2c4d708a974}\label{motor__controller_8ino_a2693b7579b7c29004f7be2c4d708a974}} 
\index{motor\_controller.ino@{motor\_controller.ino}!startActionTime@{startActionTime}}
\index{startActionTime@{startActionTime}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{startActionTime}{startActionTime}}
{\footnotesize\ttfamily unsigned long start\+Action\+Time = 0}

Variable necesaria para mover los motores a la posición necesaria \mbox{\Hypertarget{motor__controller_8ino_ae4b66bac0b571cc1378e0c5e500f59b2}\label{motor__controller_8ino_ae4b66bac0b571cc1378e0c5e500f59b2}} 
\index{motor\_controller.ino@{motor\_controller.ino}!stepperPulley@{stepperPulley}}
\index{stepperPulley@{stepperPulley}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{stepperPulley}{stepperPulley}}
{\footnotesize\ttfamily Accel\+Stepper stepper\+Pulley = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_a85ceec4f649f90d72ef6ba50f17b41dd}{S\+T\+E\+P\+\_\+\+P\+U\+L\+L\+EY}}, \mbox{\hyperlink{motor__controller_8ino_a851c0ed63c95c38825749bb757f8c2f8}{D\+I\+R\+\_\+\+P\+U\+L\+L\+EY}})}

Definición de los motores utilizando la librería Accel\+Stepper \mbox{\Hypertarget{motor__controller_8ino_a4ba08c48ae4d9a067cb5079cbe2a77c3}\label{motor__controller_8ino_a4ba08c48ae4d9a067cb5079cbe2a77c3}} 
\index{motor\_controller.ino@{motor\_controller.ino}!stepperPulleySteps@{stepperPulleySteps}}
\index{stepperPulleySteps@{stepperPulleySteps}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{stepperPulleySteps}{stepperPulleySteps}}
{\footnotesize\ttfamily int stepper\+Pulley\+Steps = 467}

Pasos necesarios para que el el motor de la polea mueva la aguja un ciclo completo \mbox{\Hypertarget{motor__controller_8ino_afda0b4a3b38d93ab5ef5786a339f24aa}\label{motor__controller_8ino_afda0b4a3b38d93ab5ef5786a339f24aa}} 
\index{motor\_controller.ino@{motor\_controller.ino}!stepperX@{stepperX}}
\index{stepperX@{stepperX}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{stepperX}{stepperX}}
{\footnotesize\ttfamily Accel\+Stepper stepperX = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_aefce719403b8e70b97befc54aa7947d2}{S\+T\+E\+PX}}, \mbox{\hyperlink{motor__controller_8ino_a9a4e24304746e87b91db15dfd1081645}{D\+I\+RX}})}

Definición de los motores utilizando la librería Accel\+Stepper \mbox{\Hypertarget{motor__controller_8ino_a5a8607c5df4dad84608c099f968af540}\label{motor__controller_8ino_a5a8607c5df4dad84608c099f968af540}} 
\index{motor\_controller.ino@{motor\_controller.ino}!stepperY1@{stepperY1}}
\index{stepperY1@{stepperY1}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{stepperY1}{stepperY1}}
{\footnotesize\ttfamily Accel\+Stepper stepper\+Y1 = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_afe3a1bfa8bbe56484a0cd53fbb9a6c4a}{S\+T\+E\+P\+Y\+\_\+1}}, \mbox{\hyperlink{motor__controller_8ino_a206df11c65d6fa30bf01ac9108cd59f9}{D\+I\+R\+Y\+\_\+1}})}

Definición de los motores utilizando la librería Accel\+Stepper \mbox{\Hypertarget{motor__controller_8ino_a51bc6045dabd993227326ac0e26e12bb}\label{motor__controller_8ino_a51bc6045dabd993227326ac0e26e12bb}} 
\index{motor\_controller.ino@{motor\_controller.ino}!stepperY2@{stepperY2}}
\index{stepperY2@{stepperY2}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{stepperY2}{stepperY2}}
{\footnotesize\ttfamily Accel\+Stepper stepper\+Y2 = Accel\+Stepper(\mbox{\hyperlink{motor__controller_8ino_a097729309a7a756a88e3593d033f0cc7}{motor\+Interface\+Type}}, \mbox{\hyperlink{motor__controller_8ino_add07a1e34bf1df68d8e94d012c41ec03}{S\+T\+E\+P\+Y\+\_\+2}}, \mbox{\hyperlink{motor__controller_8ino_a6b5ec6d626ee21af871e509f2b02033b}{D\+I\+R\+Y\+\_\+2}})}

Definición de los motores utilizando la librería Accel\+Stepper \mbox{\Hypertarget{motor__controller_8ino_ad922515b5f46489ba25cb2bbae59998c}\label{motor__controller_8ino_ad922515b5f46489ba25cb2bbae59998c}} 
\index{motor\_controller.ino@{motor\_controller.ino}!STOP\_EXECUTION@{STOP\_EXECUTION}}
\index{STOP\_EXECUTION@{STOP\_EXECUTION}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{STOP\_EXECUTION}{STOP\_EXECUTION}}
{\footnotesize\ttfamily const char S\+T\+O\+P\+\_\+\+E\+X\+E\+C\+U\+T\+I\+ON = \textquotesingle{}T\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a06d8704fb8ceefb09750bcb174fccfed}\label{motor__controller_8ino_a06d8704fb8ceefb09750bcb174fccfed}} 
\index{motor\_controller.ino@{motor\_controller.ino}!timeActionsRead@{timeActionsRead}}
\index{timeActionsRead@{timeActionsRead}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{timeActionsRead}{timeActionsRead}}
{\footnotesize\ttfamily int time\+Actions\+Read\mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}}

Vector utilizado para almacenar las coordenadas a las que moverse \mbox{\Hypertarget{motor__controller_8ino_aa3c2c2fa8863c8adce407fcd1a943a5e}\label{motor__controller_8ino_aa3c2c2fa8863c8adce407fcd1a943a5e}} 
\index{motor\_controller.ino@{motor\_controller.ino}!UP@{UP}}
\index{UP@{UP}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{UP}{UP}}
{\footnotesize\ttfamily const char UP = \textquotesingle{}W\textquotesingle{}}

Constante utilizada para comprobar las órdenes recibidas por bluetooth. \mbox{\Hypertarget{motor__controller_8ino_a3420e3c5e9ee0a06096b489d36d49567}\label{motor__controller_8ino_a3420e3c5e9ee0a06096b489d36d49567}} 
\index{motor\_controller.ino@{motor\_controller.ino}!xCoords@{xCoords}}
\index{xCoords@{xCoords}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{xCoords}{xCoords}}
{\footnotesize\ttfamily int x\+Coords\mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}}

Vector utilizado para almacenar las coordenadas a las que moverse \mbox{\Hypertarget{motor__controller_8ino_a4651592b69b46a96e13f75a332415865}\label{motor__controller_8ino_a4651592b69b46a96e13f75a332415865}} 
\index{motor\_controller.ino@{motor\_controller.ino}!yCoords@{yCoords}}
\index{yCoords@{yCoords}!motor\_controller.ino@{motor\_controller.ino}}
\doxysubsubsection{\texorpdfstring{yCoords}{yCoords}}
{\footnotesize\ttfamily int y\+Coords\mbox{[}\mbox{\hyperlink{motor__controller_8ino_a40af4217190d59d7145e58a278f9f87d}{M\+A\+X\+\_\+\+A\+R\+R\+A\+Y\+\_\+\+S\+I\+ZE}}\mbox{]}}

Vector utilizado para almacenar las coordenadas a las que moverse 